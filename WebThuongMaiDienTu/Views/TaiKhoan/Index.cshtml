@model List<WebThuongMaiDienTu.Models.TaiKhoan>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutDashBoard.cshtml";
}

<link rel="stylesheet" href="~/Content/css/Index.css">
<div class="container">
    <h1><i class="fas fa-box-open"></i> Danh Sách Tài Khoản</h1>

    <table>
        <thead>
            <tr>
                <th><i class="fas fa-barcode"></i> Mã Tài Khoản</th>
                <th><i class="fas fa-tag"></i> Tên Tài Khoản</th>
                <th><i class="fas fa-info-circle"></i> Mật Khẩu</th>
                <th><i class="fas fa-info-circle"></i> Khách Hàng</th>
                <th><i class="fas fa-info-circle"></i> Email</th>
                @*<th><i class="fas fa-cogs"></i> Thao Tác</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var items in Model)
            {
                <tr>
                    <td>@items.maTaiKhoan</td>
                    <td>@items.tenTaiKhoan</td>
                    <td>@items.matKhau</td>
                    <td>@items.KhachHang.hoTen</td>
                    <td>@items.email</td>                    
                </tr>
            }

        </tbody>
    </table>
</div>


@*code phân trang*@
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Số sản phẩm mỗi trang
        var itemsPerPage = 5;
        var products = document.querySelectorAll("tbody tr"); // Lấy tất cả các dòng sản phẩm
        var totalItems = products.length; // Tổng số sản phẩm
        var totalPages = Math.ceil(totalItems / itemsPerPage); // Tổng số trang

        // Hiển thị sản phẩm dựa trên trang hiện tại
        function showPage(pageNumber) {
            var start = (pageNumber - 1) * itemsPerPage;
            var end = start + itemsPerPage;

            // Ẩn tất cả sản phẩm
            products.forEach(function (product, index) {
                product.style.display = (index >= start && index < end) ? "table-row" : "none";
            });
        }

        // Tạo phân trang
        function createPagination() {
            var pagination = document.createElement("div");
            pagination.classList.add("pagination");

            // Tạo các nút phân trang
            for (let i = 1; i <= totalPages; i++) {
                let pageButton = document.createElement("button");
                pageButton.textContent = i;
                pageButton.classList.add("page-btn");
                pageButton.addEventListener("click", function () {
                    showPage(i);
                    setActivePage(i);
                });

                pagination.appendChild(pageButton);
            }

            document.querySelector(".container").appendChild(pagination);
        }

        // Đặt nút hiện tại là active
        function setActivePage(activePage) {
            document.querySelectorAll(".page-btn").forEach(function (btn, index) {
                btn.classList.toggle("active", index + 1 === activePage);
            });
        }

        // Khởi tạo trang đầu tiên và tạo nút phân trang
        showPage(1);
        createPagination();
        setActivePage(1);
    });
</script>


<style>
    .pagination {
        margin-top: 20px;
        text-align: center;
    }

        .pagination button {
            margin: 0 5px;
            padding: 8px 12px;
            border: none;
            background-color: #f0f0f0;
            cursor: pointer;
        }

            .pagination button.active {
                background-color: #007bff;
                color: white;
            }

            .pagination button:hover {
                background-color: #007bff;
                color: white;
            }
</style>

